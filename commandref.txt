# Never-do's in UNIX (The Unix programming environment - Mark Burgess page: 11)
* Don't ever call a program or an important file 'core'. Many scripts go around deleting
  files called 'core' because, when a program crashes, UNIX dumps the entire kernel
  image to a file called 'core' and these files use up a lot of disk space. If you call
  a file 'core' it might get deleted!
* Don't call test programs test. There is a UNIX command which is already called test
  and chances are that when you try to run your program you will start the UNIX command 
  instead. This can cause a lot of confusion because the UNIX command doesn't seem to do
  very much at all! 

w.xx.y-zzz
# w - kernal version, xx - major revision, y - minor revision, zzz - patch number

i386  - 32bit 
amd64 - 64bit

Note:
adding rw init=/bin/bash to boot parameters will open a full root session for anyone who
happens to push the power button on your PC. If you think you might need this kind of 
access, I would advise you to create a secure BIOS or GRUB password to protect yourself.

mkdir -p dir1/dir2/dir3  # will create directories and its parent directories
rm -r dir1 # recursively deletes the contents of dir1 and its subdirectories

# mail
echo $MAIL # To output the location of your inbox

# verify electronic mail addresses
vrfy user@example.edu  # To verify that the email address user@example.edu is valid

# type
type -a pwd

IBM Developer
https://developer.ibm.com/technologies/
Learn Linux, 101:A roadmap for LPIC-1
https://developer.ibm.com/tutorials/l-lpicl-map/
http://www.research.ibm.com/haifa/ponderthis/challenges/October2019.html
http://www.brendangregg.com/index.html  # perf tutorials

# boot time check in linux
systemd-analyze 
systemd-analyze blame
sudo systemctl disable NetworkManager-wait-online.service
sudo systemctl enable NetworkManager-wait-online.service

A repository is a collection of files that has information about various software, their
versions and some other details like the checksum. Each Ubuntu version has its own
official set of four repositories:

	Main - Canonical-supported free and open-source software
	Universe - Community-maintained free and open-source software
	Restricted - Proprietary drivers for devices
	Multiverse - Software restricted by copyright or legal issues

/bin - Binaries, programs used in booting the system.
/usr/bin - User binaries, standard programs available to users.
/usr/local/bin - Local binaries, programs specific to an installation.

https://www.ubuntu.com/about/release-cycle
https://www.kernel.org/doc/man-pages/
https://clearlinux.org/documentation/clear-linux

# free and df 
free -h # RAM memory
df -h   # Hard Drive memory

# Generate a random password
gpw () { openssl rand -base64 48 | cut -c1-${1}; }

journalctl -b | grep 'DMI:'
dell supports LVFS https://fwupd.org/lvfs/ for some, but not all devices.

Note: If you use systemd, read the journalctl man page. It may seem heavy-going at
first, but it makes searching the system logs so much more effective.

printenv # to display environment variables

sudo lsblk # list block devices

swapon --summary # to find information about your swap space
cat /proc/swaps

echo "$SHELL"
echo "$TERM"

set -o # to display all shell options
set -o noclobber # - (dash) for enabling
set +o noclobber # + (plus) for disabling

apt-show-versions # to list installed packages

aptitude search ~E # list essential packages

## id
$ id username # print real and effective user and group IDs

## installed packages
$ sudo apt list --installed | less
$ sudo apt list --installed | grep -i apache
$ sudo dpkg -l
$ sudo dpkg -l | grep -i apache

/var/log/apt/
sudo less -N history.log

/var/lib/dpkg/available # available packages

/etc/init.d # Configuration of System V init under Debian GNU/Linux
/etc/systemd # Configuration of Systemd
/etc/default # some default files

In systemd, unit files get packaged into
/usr/lib/systemd/system, but if you want 
to replace the default with your own, you
can put them in /etc/systemd/system and
whatever is there will take precedence 
over the defaults.

To limit the amount of CPU a process gets by dropping in a new unit configuration file 
to /etc/systemd/system and adding:
[Service]
CpuShares=200

# To login in text mode
vi /etc/default/grub 
replace "quiet splash" -> "text"
sudo update-grub

# To start XMonad
startx /usr/bin/xmonad-session

# To start qutebrowser
cd qutebrowser
.venv/bin/python3 -m qutebrowser
:set zoom.default 67%
:config-source   # to recompile
ctrl+T # new tab
shift+j # move to next tab
shift+k # move to previous tab
D # close the current tab

# man pages
apropos partition
man ascii
man hier
man systemd.unit
man systemd.service

# ctrl
ctrl+A - begining of shell command
ctrl+E - end of shell command
ctrl+H - delete a letter
ctrl+W - delete a word
ctrl+U - delete a line

# shutdown
shutdown -h now
shutdown -r now

# Groups
groups           # to list the groups
groups username  # to list the groups to which the user belongs
Note: Please bear in mind that the user ID of root is always 0 -every user
      with a user ID of 0 has root privileges!

# sudo
sudo -u username program # in sudoers you can permit the user to only sudo to that
                           user and run that one program

# Documents
/usr/share/doc

# whereis - to find the binary files 
whereis python3

# alias
alias
alias ec='echo'
unalias ec    # to unalias the command
note: enter it in .bashrc file (source ~/.bashrc)

cat /etc/*release

source ~/.bashrc # to compile changes in .bashrc file
(to execute your .bashrc with source ~/.bashrc)

~/.bash_history # bash history file

~/.local/share/Trash  #files in trash folder

cp -r directory/ foo/  #copy recursively 

du -Sh # list file size of directories

dpigs -H --lines=3000 | less -N

ip addr list wlan0

hostname -I # show ip address

cat /etc/issue.net # to view Linux distribution

last - show a listing of last logged in users

!! - alias to previous command

## Adding/Deleting Users
adduser username
deluser username

## su command
The su command is used to switch to a different user's account. You can use this command
with the username of another user to log in with that user's session.

$ su username

To exit anytime from the other user's session just type exit and hit enter.

# file
file <filename> # displays the file type
file -i <filename> # to get the mimetype

# You can obtain detailed information on the hardware using ls commands such as
  lspci - list all PCI devices
  lsblk - list block devices
  lscpu - display information about the CPU architecture
  lsscsi -

# hardware identification
For the PCI-like devices (AGP, PCI-Express, CardBus, ExpressCard, etc.), lspci
(probably with "-nn" option) is a good start for the hardware identification.

Alternatively, you can identify the hardware by reading contents of "/proc/bus/pci/
devices" or browsing directory tree under "/sys/bus/pci"

pciutils - Linux PCI utilities: lspci
usbutils - Linux USB utilities: lsusb
pcmciautils - PCMCIA utilities for Linux: pccardctl
scsitools - collection of tools for SCSI hardware management: lsscsi
procinfo - system information obtained from "/proc": lsdev
lshw - information about hardware configuration: lshw
discover - hardware identification system: discover

# system and hardware time
The following sets system and hardware time to MM/DD hh:mm, CCYY.
# date MMDDhhmmCCYY
# hwclock --utc --systohc
# hwclock --show

If the hardware (BIOS) time is set to UTC, change the setting to "UTC=yes" in the
"/etc/default/rcs".

The following reconfigure the timezone used by the Debian system.
# dpkg-reconfigure tzdata

If you wish to update system time via network, consider to use the NTP service with the
packages such as ntp, ntpdate, and chrony.

Under systemd, use systemd-timesyncd for the network time synchronization instead.
See systemd-timesyncd

ntptrace in the ntp package can trace a chain of NTP servers back to the primary source

## keyboard
sudo dpkg-reconfigure keyboard-configuration

The keyboard type on the first screen will likely be correct ("Generic") then when you
hit OK (Enter) the other screens will prompt you for language etc. Use arrow keys to 
scroll up and down between options and "Enter" for OK.

# systemd is the most popular init process for bootstrapping user spaces and
  controlling multiple system process. 
  sudo systemctl status

# Dmesg allows you to figure out errors and warnings in the kernel's latest messages.
  dmesg | less

# You can also look at all Linux system logs in the /var/log/messages file, which is
  where you'll find errors related to specific issues. It's worthwhile to monitor the 
  messages via the tail command in real time when you make modifications to  your
  hardware, such as mounting an extra disk or adding an Ethernet network interface.
  tail -f /var/log/messages

# Commands to figure out networking functions in the Linux server include ip addr,
  traceroute, nslookup, dig, and ping, among others.
  sudo ip addr show



To mount cd to /home/ndayalan/lan :
sudo mount /dev/cdrom /home/ndayalan/lan

# chmod
chmod u=rwx,g=rwx,o=rwx <filename> 
chmod 777 <filename>
4=read, 2=write, 1=execute, 0=no permission
7=4+2+1   5=4+0+1    4=4+0+0

u user     + to add a permission                      r read
g group    - to remove a permission                   w write
o other    = to assign a permission explicitly        x execute (for files),

chmod u=rw file
sets the permissions on the file to give the user read and write permission on file. No
other permissions are altered.

chmod u+x,g+w,o-r file
alters the permissions on the file to give the user execute permission, to give members
of the users group write permission, and prevent any users not in the group from
reading it.

chmod u+w, go-x dir
gives the user write permission in the dir, and prevents all other users having access
to that directory (by using cd. They can still list its contents using ls.)

chmod a+w file  # to add write access for everybody
chmod a-w file # to remove write access
chmod a=r file  # set permissions on the file to allow only read access for all users

chmod u+w, go+r-w file
adds write access for the file owner and removes write access and adds read access for
the group and other classes

chmod -R go-rwx /home/ndayalan  # recursive option (-R)
if user ndayalan wants to protect all the files under his home directory from everyone 
else

chmod -R +r . 
grants read access to all users for the current directory and every file under it

chmod go= file
prevents any access to the file by anyone other than its owner

chmod go+rX *
the X access type grants execute access to the specified access classes only when 
execute access is already set for some access class. A typical use for this access type
is to grant group or other read and execute access to all the directories and
executable files within a subtree while granting only read access to all other types of 
files (example: datafile.txt)

chmod o=g *
makes the other access the same as the current group access for each file/directory

# umask
027 is better from security perspective, even better is to use 077 for root. With 027
mask, when root creates a file, it can be read and executed by users who belongs to the
group of the file. With 077 mask, only root can read write and execute files.

Why is 077 better?
because by making files belonging to user readable by root only, it avoids some common
system administrator mistakes.
because it's harder for an attacker to run privilege escalation only poorly written 
shell scripts/binaries if they can't even read it.

# chown
chown ndayalan file/Directory  # Change the owner of fiel/Directory to "ndayalan"
chown ndayalan:staff file/Directory # Likewise, but also change its group to "staff"
chown -hR ndayalan file/Directory # Change the owner of file/Dire and subfiles
Note: refer man chown (Examples section)

# chgrp
chgrp ndayalan file/Directory   # Change the group of file/Directory to "ndayalan"
chgrp -hR ndayalan file/Directory # Change the group of file/Dire and subfiles
Note: refer man chgrp (Examples section)

# irssi - https://freenode.net/kb/answer/registration
Register your IRC nick - /msg NickServ REGISTER password youremail@example.com
Logging in - /connect chat.freenode.net 6667 account_name:password
/network list
/nick name
/connect Freenode
/join #ubuntu
/part
/exit
long pastes: wgetpaste or dpaste.com
For posting multi-line texts into the channel - https://paste.ubuntu.com
To post screenshots use https://imgur.com/
!pastebinit to paste directly from command line
Make sure you give us the URL for your paste

# wireless connection - wlx00873239946f
sudo ifconfig wlan0 up/down #bring wireless network up/down
iw dev #gives wifi adapter device name
iw wlan0 link #Connected/Not Connected (wlan0 - device name from previous command)
sudo iw wlan0 scan      sudo iwlist wlan0 scan
nmcli dev
nmcli dev wifi
sudo nmcli dev wifi connect name password *****   
(replace name with network name)
nmcli con show = nmcli -p connection 
(list all ethernet and wireless connections)

# nmcli
nmcli connection show  # list all network connections
nmcli device show      # list device information including hardware address
nmcli general status   # show overall status of Network Manager
nmcli general hostname # get and change system hostname
nmcli general permissions  # show the permissions
nmcli general logging  # get and change Network Manager logging level and domains
nmcli networking on/off # enable or disable networking control by Network Manager
nmcli networking connectivity  # get network connectivity state
     none = the host is not connected to any network
     portal = the host is behind a captive portal and cannot reach the full Internet
     limited = the host is connected to a network, but it has no access to the Internet
     full = the host is connected to a network and has full access to the Internet
     unknown = the connectivity status cannot be found out
nmcli radio all/wifi/wwan
nmcli radio wifi on/off
nmcli radio wwan on/off
nmcli radio all on/off
nmcli monitor # observe Network Manager activity
nmcli connection show/up/down/add/edit/modify/delete/monitor/reload/load
nmcli device status/show/set/connect/reapply/disconnect/delete/monitor/wifi/lldp
nmcli -p -f general,wifi-properties device show wlx00873239946f # Device details
man 7 nmcli-examples -- usage examples of nmcli

# mount/unmount usb
fdisk -l (sudo) #to find name
df -h
/dev/sdb1
sudo mount /dev/sdb1 /media/ndayalan
sudo umount /dev/sdb1 /media/ndayalan

# Basic Network Commands
ping www.slackware.com
traceroute www.slackware.com
host www.slackware.com #map name to ip address
nslookup 64.57.102.34
dig @192.168.1.254 www.slackware.com mx

# text editor
sudo update-alternatives --config editor

# X terminal emulator 
sudo update-alternatives --config x-terminal-emulator

# Recording the shell activities (record when you perform any sys admin tasks)
$script #Script started, file is typescript
Do whatever shell commands under script
Press Ctrl-D to exit Script

sudo apt purge `dpkg --get-selections | grep deinstall | cut -f1`
aptitude search '?essential'
dpkg-query -Wf '${Package; -40}${Essential}\n' | grep yes

# send message to everyone who is logged on to the system with wall
echo "We are shutting down in 1 hour" | wall

# viewing binary data
od -t x1 <name>

# To convert *.mkv to *.mp4
ffmpeg -i input.mkv -codec copy output.mp4

# pdftk (read man page of pdftk)
pdftk in.pdf output out.pdf uncompress
LESSOPEN="" less out.pdf

# qpdf

# scribus

# cowsay
cowsay -l
cowsay -f tux Linux is awesome

# ls
List only the .txt files in the directory: ls *.txt
List by file size: ls -a
Sort by time and date: ls -d
Sort by extension: ls -x
Sort by file size: ls -S
Long format with file size: ls -ls
send it to a file for later viewing: ls -al > mydirectorylist

# mkdir
mkdir sa{1..50}  # 50 directories from sa1 to sa50

# tar files/directories to backup
1. Compress an Entire Directory or a Single file
tar -czvf name-of-archive.tar.gz /path/to/directory-or-file
-c: Create an archive, -z: Compress the archive with gzip, 
-v: Display progress in the terminal while creating the archive
-f: Allows you to specify the filename of the archive
2. Compress Multiple Directories or Files at once
tar -czvf archive.tar.gz /home/ubuntu/Downloads /usr/local/stuff
/home/ubuntu/Documents/notes.txt
3. Exclude Directories and Files
tar -czvf archive.tar.gz /home/ubuntu --exclude=/home/ubuntu/Downloads
--exclude=/home/ubuntu/.cache
tar -czvf archive.tar.gz /home/ubuntu --exclude=*.mp4
4. Use bzip2 Compression Instead
tar -cjvf archive.tar.bz2 stuff
5. Extract an Archive
tar -xzvf archive.tar.gz
6. Extract the contents of the archive to a specific directory
tar -xzvf archive.tar.gz -C /tmp 

# untar/tar
tar -tf *.tar.gz # to view contents without extracting
tar -tvf *.tar.gz # list more information
tar -xvzf filename.tar.gz # to decompress a tarball

# zip
unzip -l filename.zip # to view contents without unzip
unzip filename.zip # to unzip

# scp
scp ph15m015@172.29.204.101:/home2/mtech/ph15m015/cl.tar.gz .

# hostname
hostname    # list machine name
hostname -i # list 127.0.1.1
hostname -I # list ip address of network

# youtube-dl
youtube-dl --extract-audio --audio-format mp3 url # to download mp3 format
youtube-dl -F url # to find best video
youtube-dl -f no url # to download
sudo pip install --upgrade youtube-dl
sudo pip install --upgrade pip # to update pip
https://stackoverflow.com/questions/49836676/error-after-upgrading-pip-cannot-import-
name-main
https://askubuntu.com/questions/380438/how-can-i-update-youtube-dl

# SSH
If you're using a cloud server, you will probably want to allow incoming SSH connections
(port 22) so you can connect to and manage your server. This section covers how to 
configure your firewall with various SSH-related rules.

Allow SSH
To allow all incoming SSH connections run this command:
$ sudo ufw allow/deny ssh
An alternative syntax is to specify the port number of the SSH service:
$ sudo ufw allow 22

Allow incoming SSH from specific IP Address or Subnet
To allow incoming SSH connections from a specific IP address or subnet, specify the 
source. For example, if you want to allow the entire 15.15.15.0/24 subnet, run this
command:
$ sudo ufw allow from 15.15.15.0/24 to any port 22

Allow incoming Rsync from specific IP Address or Subnet
Rsync, which runs on port 873, can used to transfer files from one computer to another.

To allow incoming rsync connections from a specific IP address or subnet, specify the 
source IP address and the destination port. For example, if you want to allow the entire
15.15.15.0/24 subnet to be able to rsync to your server, run this command:
$ sudo ufw allow from 15.15.15.0/24 to any port 873

Source: https://www.digitalocean.com/community/tutorials/ufw-essentials-common-firewall
-rules-and-commands
https://thepcspy.com/read/making-ssh.secure/

# hardware info
hwinfo --help
hwinfo --netcard
hwinfo --gfxcard

# dpkg commands
sudo dpkg -i packagename.deb # to install a downloaded debian package (.deb) 
sudo dpkg --unpack packagename.deb # to unpack the package (.deb) without installing it
sudo dpkg -r packagename     # to remove a debian package (.deb)
sudo dpkg -P packagename     # to purge a debian package (.deb)
sudo dpkg-reconfigure packagename # to reconfigure/repair an installed debian package
dpkg -S /etc/logrotate.conf # find out what package the file /etc/logrotate.conf belongs
dpkg -L packagename # list information about the pkg including all the files it contains
dpkg -V packagename # verify the package installation
dpkg --info *.deb # information about .deb package
dpkg --status packagename
dpkg -l # list all currently installed packages (including those from the repositories)
dpkg --get-selections # if you need simpler output
dpkg -s zip # display details of the specified package

# clamAV
sudo apt install clamav
sudo freshclam # to update the signatures
clamscan --help
clamscan -r --bell -i /home/username/Downloads

# lynis
sudo lynis audit system
sudo lynis audit system --quick
sudo lynis show commands
sudo lynis show help
sudo lynis show profiles
sudo lynis show settings
sudo lynis show version
ref: https://cisofy.com/documentation/lynis/get-started/#first-run
     https://linuxsecurity.expert/checklists/linux-security-and-system-hardening
     https://linuxsecurity.expert/checklists/linux-security-best-practices
Installation:
git clone https://github.com/CISOfy/lynis
Execute:
cd lynis
./lynis audit system
To run as root, change ownership of the related files (or full directory)
chown -R 0:0 lynis
Test and debug information: /var/log/lynis.log
Report data               : /var/log/lynis-report.dat

# ps_mem
sudo pip install --upgrade pip # to upgrade pip to latest version
sudo pip install ps_mem
sudo ps_mem | less # to run ps_mem

thecloudfile@protonmail.com aePh1tha

# Private Browsing using Tor and I2P

Tor, I2P, etc, are open, distributed networks that bounce your internet communications 
around a network of relays run by volunteers all around the world. This way, anybody 
watching your internet connection can't figure out the sites you visit, and the sites 
you visit can't track your physical location. 

Though both of them are supposed to protect your identity online using cryptographic 
methods, there are several differences in their respective approaches to this question 
of privacy. Tor takes the directory-based approach, providing a centralised point to 
manage the overall view of the network, as well as gather and report statistics, while 
I2P uses a distributed network database and peer selection. Tor provides better 
anonymous access to the open internet while I2P provides a more tobust and reliable 
network within the network layout. Tor also has a larger user base, with more volunteers
around the world. 

Also, beware that your ISP can see that you're using Tor or I2P (though they cannot 
determine the content of the traffic). To hide this information from your ISP, you can 
use a high-quality VPN service to act as an entry point to your anonymous network. An 
excellent open source project for this is OpenVPN: https://openvpn.net  

# Tlp
sudo tlp-stat | less  # system info

# Service - /etc/init.d 
service --status-all  # to list status of all services
service sshd status   # gives the status of sshd
service sshd stop     # to stop the sshd service
service sshd start    # to start the sshd service
service sshd restart  # to restart the sshd service

# wget
If you ever need to download an entire website, perhaps for off-line viewing, wget can
 do the job for you:
$ wget \
	--recursive \ # download the entire website
	--no-clobber \ # don't overwrite any existing files
	--page-requisites \ # get all the elements that compose the page (images, css)
	--html-extension \ # save files with the .html extension
	--convert-links \ # convert links so that they work locally, off-line
	--restrict-file-names=windows \ # modify file names (to work in windows as well)
	--domains website.org \ # don't follow links outside website.org
	--no-parent \ # don't follow links outside the directory tutorials/html/
		www.website.org/tutorials/html/

# trickle
trickle -d 1024 wget -c 
   https://archive.org/download/CharlieChaplin/Chaplin_512kb.mp4 
will download the Charlie Chaplin movie (available as public domain from the Internet
Archive) with the Wget downloader limiting the download speed to 1024Kbps.
You can use Wget's --limit-rate option to regulate its download speed.
In the same vein, use the -u switch to regulate the upload speed.

If setting per-application speeds seems too much of a chore, you can set global speed
caps with the trickled command, such as
trickled -d 2048 -u 1024

trickle apt upgrade
will now update the Ubuntu installation while respecting the limits set by the trickled.

# httrack

# tasksel - a user interface for installing tasks
tasksel --list-tasks
tasksel --task-packages dns-server # to list the packages installed with the DNS server

# Terminal:
sudo update-alternatives --list x-terminal-emulator
sudo update-alternatives --install /usr/bin/x-terminal-emulator
	x-terminal-emulator /usr/bin/stterm 100
sudo update-alternatives --list x-terminal-emulator
sudo update-alternatives --config x-terminal-emulator

# Hardware Info
sudo lshw | less 
sudo lshw -C network

# APT commands
apt-cache pkgnames
apt-cache search <package-name>
apt-cache show <package-name>
apt-cache showpkg <package-name>  # show dependencies
apt-cache depends <package-name>
apt-cache rdepends <package-name>
apt-cache stats
sudo apt-get update / sudo apt update
sudo apt-get upgrade / sudo apt upgrade / sudo apt-get dist-upgrade
sudo apt-get install <package-name> / sudo apt install <package-name>
sudo apt-get install <package-name1> <package-name2>

# apt-show-versions
apt-show-versions # to know for all your installed packages whether they are
                    uptodate or upgradeable
apt-show-versions -u # if you want to have a list of all upgradeable packages
apt-show-versions -a -p libc6 # to get a list of all available versions of libc6
apt-show-versions dpkg apt # to get information about several packages
apt-show-versions -r ^texlive
apt-get install `apt-show-versions -u -b | grep testing` # to upgrade all packages in
                                                           testing 
-u, --upgradeable # Print only upgradeable packages
-a, --allversions # Print all available versions of the selected packages
-b, --brief       # Print only package_name/distribution for upgradeable packages
-v, --verbose     # Prints out messages about which package files are parsed
-V, --version     # Prints out version of apt-show-versions
-h, --help        # Prints out command-line help

# To decrypt file
qpdf -password=password -decrypt /home/username/Documents/Secured.pdf /home/username/
Documents/unsecured.pdf

# xclip
y  # in qutebrowser
xclip -o -selection clipboard
ytdl1 --no-playlist "$(< url.txt)"
example: xclip -o -selection clipboard > url.txt
ytdl1 --no-playlist "$(< url.txt)"
ytdl2 --no-playlist "$(< url.txt)"

# youtube-dl
:yank # type :yank in qutebrowser to copy the url
xclip -o -selection clipboard > url.txt  # write the url in url.txt
sudo youtube-dl -F --no-playlist "$(< url.txt)" # list the available formats
sudo youtube-dl -f 22 --no-playlist -f 22 --no-playlist "$(< url.txt)"
sudo python3 -m pip install --upgrade youtube-dl

# xrandr
xrandr --listmonitors    # this command gives the <output name> for the command below
xrandr --output <output name> --brightness "<x>"  
## <x> is a number between 1 (full brightness) and 0 (backlight off)

# rclone - a command line program to sync files and directories
rclone lsd remote:   # List directories in top level of your pCloud
rclone ls remote:    # List all the files in your pCloud
rclone copy /home/source remote:backup # To copy a local directory to an pCloud 
                                         directory called backup (note: created one)
rclone sync /home/source remote:directory_name # To sync a local directory to a remote
rclone sync /home/source remote:directory_name --dry-run
rclone move /home/source remote:directory_name
rclone delete remote:path
rclone check source:path dest:path # checks the files in the source and dest match
rclone mkdir remote:directory_name # To create a directory in remote
rclone size remote:path # prints the total size and number of objects in remote:path
rclone dedupe remote:path # interactively find duplicate files and delete/rename them
rclone version
rclone version --check
rclone about remote: # get quota information from the remote
rclone config file
rclone config show
rclone config providers 
rclone listremotes # list all the remotes in the config file
rclone mount remote:path/to/files /path/to/local/mount # Mount the remote as file system
rclone ncdu remote: # Explore a remote with a text based user interface
rclone touch remote:path # create new file or change file modification time
rclone tree remote:path # list the contents of the remote in a tree like fashion

# IP
sudo ip addr show  # to check an IP address
sudo ip addr del 192.168.50.5/24 dev eth1  # to remove an IP address
sudo ip link set eth1 up  # to enable network interface
sudo ip link set eth1 down # to disable network interface
sudo ip route show  # to check route table
*** https://www.tecmint.com/red-hat-rhcsa-rhce-exam-certification-book/

# systemctl
systemctl status ufw  # to check the status of ufw

# journald
sudo journalctl -b    # log messages right from the system boot

eth5ahNu

#nextcloud
https://nextcloud-fi.webo.hosting/login
https://kmu.files.cnow.at/login
https://cloud01.opsdata.ch/index.php/login

# fdisk  http://www.slackware.com/install/partitions.php
When you start fdisk you need to specify the device to use. By default it will try to 
open /dev/hda, but in some cases this is not the correct device to use. Just specify
the device name after typing fdisk on the command line. For example:

	fdisk /dev/hdb

This will tell fdisk to open the primary slave IDE hard disk. Notice that you do not
specify a partition number on the device name.

An alternative to fdisk is cfdisk, which provides a menu-based setup program for the
partition setup (DOS users comfortable with DOS's fdisk may find this program easier).
Just run cfdisk at the prompt instead of fdisk.

Here are some key commands you should be familiar with when using fdisk.
p Display the current partition table
m Display the help screen
d Delete a partition
n Add a new partition
t Change the partition's system ID
q Quit fdisk without saving changes
w Write changes to device and quit fdisk

# w3m 
sudo apt install w3m w3m-img  # installing w3m
w3m duckduckgo.com            # basic browsing
shift-B                       # take you back a page
shift-T                       # browser tabs
shift-[ and shift-]           # to switch between tabs 
Esc + A                       # to bookmark the page
w3m -M <url>                  # Display web content in monochrome terminal
w3m -o auto_image=TRUE        # Display embedded graphics
w3m -m nntp://news.aioe.org/comp.os.linux.networking # Display content from Usenet
w3m -post - http://example.com/form.php <<<'a=0&b=1' # Upload data for a URL using
                                                       the POST method
~/.w3m/bookmark.html    # default bookmark file
~/.w3m/config           # user defined configuration file; orverrides /etc/w3m/config
~/.w3m/cookie           # cookie jar; written on exit, read on launch
~/.w3m/history          # browser history -visited files and URLs
~/.w3m/keymap           # user defined key bindings; overrides default key bindings
~/.w3m/mailcap          # external viewer configuration file
~/.w3m/menu             # user defined menul overrides default menu
~/.w3m/mime.types       # MIME types file
~/.w3m/mouse            # user defined mouse settings
~/.w3m/passwd           # password and username file
~/.w3m/pre_form         # contains predefined values to fill recurrent HTML forms
http://w3m.sourceforge.net

# system information viewers
dmidecode - it reports information about your system's hardware as described in your
            system BIOS according to the SMBIOS/DMI standard.
hwinfo    - powerful hardware detection tool come from openSUSE
inxi      - a script to get system information
nmon      - console based application for monitoring various system components

# Apache
To look into the number of Apache processes your Linux system runs:
ps ax | grep apache | grep -v grep | wc -l 
The relevant information is kept inside the Apache configuration file:
/etc/apache2/apache2.conf

# Server query
host www.slackware.com
dig www.slackware.com
nslookup www.slackware.com

# Manage processes in Ubuntu
When an executable program starts up, it runs a process and this process will be under
the management of your Linux system's process table.

The ps and top commands are very powerful for viewing information about the running 
processes. Then there are commands such as nice and renice and they can be used for
raising and lowering the process's priority. You can also move the processes to run in
the background, or back to run in the foreground again. A command -chrt- can be used
to run processes in real-time. You can use the kill and killall commands to send signals
to processes by PID or by name.

The ps command gives a snapshot of currently running processes whereas the top command
offers a screen-oriented, constantly updated listing of the running commands. 

ps # displays the list of processes of the current user at the current shell
ps -u username # specific user's running process
ps -u username u # displays all the running processes with CPU and memory information
ps -e # displays every running process
ps -el # long list of every running process
ps -ef # displays a full format list of all running processes
ps -eF # extra full format list of all running processes

Some processes start up other processes. The hierarchy of processes can be viewed by
using several options witht the ps command.

ps -ejH # shows the process hierarchy with information on process and session IDs.

top -d 5 # default delay to update is 3 seconds; this command changes it to 5 seconds
top -u username # view only the processes related to the specific user
top -n 10 # this will refresh the screen ten times before quitting
top -b # run in batch mode
A
top -b 

# exiftool 
exiftool filename.jpg # to read the entire history of an image
exiftool "-all=" filename.jpg # to scrub all the personalizing metadata from the image
exiftool filename.mp3 # to read the entire history of an mp3 file
exiftool filename.pdf

# ffmpeg
ffmpeg -i filename.mp3/filename.mp4

# xmonad
--recompile       Recompiles your configuration in ~/.xmonad/xmonad.hs
--restart         Causes the currently running xmonad process to restart
--replace         Replace the current window manager with xmonad
--version         Display version of xmonad
--verbose-version Display detailed version of xmonad

Default keyboard bindings
mod-shift-return         Launch terminal
mod-p                    Launch dmenu
mod-shift-p              Launch gmrun
mod-shift-c              Close the focused window
mod-space                Rotate through the available layout algorithms
mod-shift-space          Reset the layouts on the current workspace to default
mod-n                    Resize viewed windows to the correct size
mod-tab                  Move focus to the next window
mod-shift-tab            Move focus to the previous window
mod-j                    Move focus to the next window
mod-k                    Move focus to the previous window
mod-m                    Move focus to the master window
mod-return               Swap the focused window and the master window
mod-shift-j              Swap the focused window with the next window
mod-shift-k              Swap the focused window with the previous window
mod-h                    Shrink the master area
mod-l                    Expand the master area
mod-t                    Push window back into tiling
mod-comma                Increment the number of windows in the master area
mod-period               Deincrement the number of windows in the master area
mod-shift-q              Quit xmonad
mod-q                    Restart xmonad
mod-shift-slash          Run xmessage with a summary of the default keybindings
mod-[1..9]               Switch to workspace N
mod-shift-[1..9]         Move client to workspace N
mod-{w,e,r}              Switch to physical/Xinerama screens 1, 2, or 3
mod-shift-{w,e,r}        Move client to screen 1, 2, or 3
mod-button1              Set the window to floating mode and move by dragging
mod-button2              Raise the window to the top of the stack
mod-button3              Set the window to floating mode and resize by dragging

Examples
To use xmonad as your window manager add to your ~/.xinitrc file:
exec xmonad

Customization
xmonad is customized in ~/.xmonad/xmonad.hs, and the restarting with mod-q.
You can find many extensions to the core feature set in the xmonad-conrtib package,
available throught your package manager or from xmonad.org

Ref: https://xmonad.org/manpage.html#customization

# System Admin Skills
1. Manage file systems
The single most important file related to file systems is /etc/fstab, which holds their
mount points, their types and various other permissions about them - it is the job of 
the system administrator to alter and maintain the /etc/fstab file in order to contain
the correct information. 

https://askubuntu.com/questions/420320/what-permissions-would-change-if-i-change-
umask-to-027-from-022

failed login attempts are logged in /var/log/faillog

https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-ubuntu-
quickstart

The magic of SysReq
Linux is usually stable enough to survive misbehaving software, but it is possible for a
program to lock up the whole computer. Before you reach for the Power or Reset button 
and risk corrupting your file systems, there is a better way to get out of it. You can
send commands directly to the kernel by holding down the Alt and SysReq (aka PrtScr) 
keys and pressing certain letter keys. As the kernel listens for those directly, they
work even if X is completely locked and accepting no input.

The keys normally used to get out of a lockup are R, to reset the keyboard - this
occasionally fixes the problem on its own. Next, press E to send a TERM signal to all
processes, asking them to shut down cleanly, writing any data to disk and closing any
open files. Next in line is I, which sends a KILL signal to all remaining processes,
forcing them to shut down. Pressing S tells the kernel to sync, flushing all buffers to
disk so that remaining open files can be closed cleanly. Press U to unmount all file
systems and remount them read-only, to avoid further data corruption. Finally, B
reboots the system.

So, that is: hold down Alt and SysReq and press R-E-I-S-U-B in turn, preferably leaving 
a coubple of seconds between each. There are several, aminly silly, mnemonics to help 
remember that sequence, the most appropriate being Reboot Even if System Utterly Broken,
but the easiet way to remember the sequence is that it is BUSIER backwards. This is not
something you should need very often, but it is well worth remembering when you do.

## cli-magic
w3m http://en.wikipedia.org/wiki/May_06 

## Documentation
Debian:
www.debian.org/doc
http://debian-handbook.info
Ubuntu:
https://help.ubuntu.com
https://help.ubuntu.com/community
www.askubuntu.com
Linux Mint:
www.linuxmint.com/documentation.php
OpenSuse:
http://doc.opensuse.org
Fedora:
http://docs.fedoraproject.org
CentOS:
www.centos.org/doc
RedHat:
http://tinyurl.com/rheldocs
Arch:
https://wiki.archlinux.org

## ImageMagick
convert image.jpg image.png  # Converts the image from JPEG format into PNG, leaving
                               the original file intact
convert -list format  # can list the supported formats
identify my_image.png # displays information about an image in a one-line summary
Add the -verbose option to get a very detailed information report.
convert image.jpg -resize 600*400 image.png # This gives you a PNG image that is a
maximum of 600 pixels wide and 400 pixels high. It preserves the aspect ratio and won't
stretch, compress or otherwise distort the image.
convert -list color # list color names
animate -delay 100 *.png # for viewing image sequences(slideshows)

## sxiv
sxiv -f -S 10 * # f - fullscreen, S - slideshow, 10 - 10 seconds, * - files 

## Colors
#15242F terminal
#063A76 xmobar

## ispell
ispell filename.txt # to run a spelling check

ispell highlights the first word it doesn't recognize. If the word is misspelled, ispell
usually offers one or more alternatives. Press R and then the number beside the correct
choice. In the screen capture above. I'd press R and 0 to fix the error.

If, on the other hand, the word is correctly spelled, press A to move to the next 
misspelled word. ispell saves your changes, creates a backup of the file you just 
checked (with the extension .bak), and shuts down.

You need to tell it a file's format. When starting ispell, add -t for a Tex or LaTex 
file, -H for an HTML file, or -n for a groff or troff file. For example, if you enter
ispell -t myReport.tex, ispell ignores all markup.

If you don't want the backup file that ispell creates after checking a file, add -x to
the command line - for example, ispell -x myFile.txt

You can add a word to a personal word list by pressing I. This saves the word to a file
called .ispell_default in the root of your /home directory.

## system-built
Taskbar: xmobar
http://projects.haskell.org/xmobar/

System tray: stalonetray
http://stalonetray.sourceforge.net/

Application launcher: dmenu
https://tools.suckless.org/dmenu/

Wallpaper setter: feh
https://feh/finalrewind.org/

Time management: calcurse
http://calcurse.org/

Image viewer: sxiv
https://github.com/muennich/sxiv

## Man-pages
Using Git, you can obtain the very latest version of man-pages using the following
command:
$ git clone http://git.kernel.org/pub/scm/docs/man-pages/man-pages

You can see what's recently been pushed to kernel.org via CGit:
http://git.kernel.org/?p=docs/man-pages/man-pages.git

## script - Recording the shell activities
$ script # Script started, file is typescript
Do whatever shell commands under script.
Press Ctrl-D to exit script.
$ vi typescript

## popularity-contest
$ popularity-contest > /var/log/popularity-contest
$ popcon-largest-unused

## apt-mark
To remove package from list of packages considered for removal, mark that package as
installed manually. You can do it using apt-mark:
$ apt-mark manual <package_name>

## finger - displays information about the system users
$ finger # user information lookup program

## clean and lean machine
fslint # a utility to find and clean various forms of lint on a filesystem, especially
         duplicate files and broken symlinks.

debfoster # creates dependency files to enable you to keep track of what you have
            installed.

localepurge # will remove all locale files from your system that you have no need for 

## Pandoc
pandoc # pandoc is invoked without specifying any input files, it operates as a filter,
         taking input from the terminal and sending its output back to the terminal

By default, input is interpreted as pandoc markdown, and output is HTML. 

pandoc -f html -t markdown # converting from HTML to markdown (hit Ctrl-D)

pandoc -f markdown -t latex # converting from markdown to LaTeX

pandoc test1.md -f markdown -t html -s -o test1.html # convert markdown file to HTML

pandoc test1.md -f markdown -t latex -s -o test1.tex # convert markdown file to LaTeX

To create a PDF, you'll need to have LaTeX installed.
pandoc test1.md -s -o test1.pdf

pandoc --help

## markdown
# Start a heading with one hash
## Start a subheading with two hashes
Paragraphs are separated by empty lines
**Bold text** is wrapped in double asterisks
_italic_ in underscores
`monospace` in backticks
[A link](https://www.romanzolotarev.com/)
![An image](/avatar.jpeg)
	# Indented code blcok
	hello() { echo 'Hello'; }

A list of items:

- Each item is on its line
- Lines start with '-'

An  ordered list:

1. The first item
1. The second item can start with `1.` too
1. Markdown handles the numbering for you

Convert Markdown to HTML with Jekyll, lowdown, pandoc, or with the original
Markdown.pl

## update-alternatives command
$ ls -l $(type -p vi)
$ sudo update-alternatives --display vi
$ sudo update-alternatives --config vi

The Debian alternatives system keeps its selection as symlinks in "/etc/alternatives/".
The selection process uses corresponding file in "/var/lib/dpkg/alternatives/".

## font
xset q 		# for core X11 font path
fc-match	# for fontconfig font default
fc-match -a     # displays sorted list of best matching fonts, but do not do any pruning
fc-match -s     # displays sorted list of best matching fonts
fc-list		# for available fontconfig fonts 

## watch - repeating a command with a constant interval
$ watch # executes a program repeatedly with a constant interval 
$ watch w # this displays who is logged on to the system updated every 2 seconds

## scheduling tasks
scheduling tasks once
$ echo 'command -args' | at 3:40 monday

scheduling tasks regularly
$ cron(8)

# splitting a large file into small files
When a data is too big to backup as a single file, you cna backup its content after 
splitting it into, e.g. 2000MiB chunks and merge those chunks back into the original
file late.

$ split -b 2000m large_file
$ cat x* > large_file
Please make sure you do not have any files starting with"x" to avoid name crashes.

## invisible disk space consumption
All deleted but open files consume disk space although they are not visible from normal
du. They can be listed with their size by the following.
# lsof -s -X / | grep deleted
$ lsof -i   # to list all open network connections

## pretty print a manual page
You can print a manual page in PostScript nicely by one of the following commands.
$ man -Tps some_manpage | lpr
$ man -Tps some_manpage | mpage -2 | lpr # the second example prints 2 pages on 1 sheet

## merge two ps and pdf files
You can merge two postscript and portable document format files using gs of ghostscript.
$ gs -q -dNOPAUSE -dBATCH -sDEVICE=pswrite -sOutputFile=bla.ps -f foo1.ps foo2.ps
$ gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=bla.pdf -f foo1.pdf foo2.pdf

https://www.ibm.com/developerworks/library/l-lpic1-map/index.html

## parted - a partition manipulation program
parted --list # lists partition layout on all block devices
parted --help # displays a help message
parted --machine # displays machine parseable output

## lpinfo - show available devices or drivers
lpinfo -v # list all devices
lpinfo -m # list all drivers
lpinfo --make-and-model "HP LaserJet" -m # list drivers matching "HP LaserJet"

## Shell Scripting Tricks
# To see how much disk space is left
df
df -h # for a human readable format in megs & gigs

# To see where all my big files are
cd /somewhere
du -sk * | sort -nr
Repeat as necessary

# To see big directories instead of files
du -x /somewhere | sort -nr | head -10
This shows the 10 largest directories under /somewhere
Another way:
find /somewhere -size +2000k -ls
This shows all files over 2000 kilobytes under /somewhere
If you want to keep your .debs, you can filter them out of the list:
find / -size +2000k ! -name "*.deb" -ls
This shows all files on your entire system over 2000 kilobytes that are not debian pkg

# To rename them all with underscores instead of spaces
rename 's/ /_/g' *.mp3
This rename command is not a general Unix command but it's included with Perl which is
of course installed by default in Debian.

# To do that recursively
That's a bit tricky. You can get a list of files to pass to rename using find, but if 
some of the directories are being renamed as well, that's not something rename can
keep track of. You have to use -depth with find to make sure any files are renamed
before the directories they're in.
cd /somewhere
find . -depth -name '* *' -type f -print0 | xargs -r0 rename 's/ /_/g'

# Systemd
systemd-analyze
systemd-analyze blame (results pipe to less by default, can use --no-pager)
systemd-analyze plot > /tmp/boot_plot.svg 
# systemctl (not to be confused with sysctl) is used to manage units
systemctl start sshd.service     # starting a unit
systemctl stop sshd.service      # stopping a unit
systemctl restart sshd.service   # restarting a unit
systemctl enable sshd.service    # enable a unit to start at boot
systemctl disable sshd.service   # disabling service so it does not run at boot
systemctl cat sshd.service       # displaying the contents of a unit file
systemctl status sshd.service    # to get information about a unit
systemctl suspend     # sleep (suspend to RAM)
systemctl hibernate   # hibernate (suspend to Disk)
#  /sbin/shutdown task
systemctl reboot      # reboot
systemctl halt        # halt system (without powering off)
systemctl poweroff    # power off system
systemctl --type service --state active                   # list services
systemctl list-unit-files --type=service                  # list all services 
systemctl list-dependencies multi-user.target --no-pager  # list all services by target
systemctl list-units --type target # view list of currently loaded targets
systemctl    # lots of options...
systemctl-   # lots of new commands...
# journalctl is used to interact with the journal
journalctl /full/path/to/executable   # show all messages by a specific executable
journalctl _PID=456                   # show all messages by a specific PID (ex. 456)
journalctl _SYSTEMD_INIT=sshd.service # show all messages by a specific unit
journalctl                            # show all messages in journal (view basic logs)
journalctl -n 10                      # view most recent logs (-f to follow)
journalctl -p err                     # filter by priority
journalctl -p err --since "2015-2-17 18:00:00" --until "2015-2-17 18:10:00"
                                      # filter by time and priority
# similar to the tail command, the -f flag can be used to follow the journal, while
the -n flag can be used to limit results to a number of most recent messages
# run man journalctl for the full list of options

# mpv
mpv [options] filename
mpv --shuffle /folder-path/*
mpv --playlist=filename.pls
mpv --gapless-audio --playlist=filename.pls # to activate the gapless audio optiona
mpv --help 
mpv --list-options 

# route
route -n

# nslookup
nslookup <url> 
nslookup -query=mx <url>
nslookup -type=ns <url>   # query name server
nslookup -type=any <url>  # query DNS record
nslookup -type-soa <url>  # query start of authority
nslookup -port 56 <url?   # query port number

# dig - a tool for querying DNS nameservers for information about host address, 
        mail exchanges, nameservers, and related information
dig <url> 
dig <url> +nocomments    # turn off comment lines
dig <url> +noauthority   # turn off authrity section
dig <url> +noadditional  # turn off additional section
dig <url> +nostats       # turn off stats section
dig <url> +noanswer      # turn off answer section
dig <url> +noall         # disable all section at once

# uptime - verify what happened actually when the server was unattended
# wall "message" - sends a message to everybody logged in with their mesg permission yes
# mesg [n|y] - contrl people who can use the "write" command
# write <user_name> - send text directly to the screen of another linux machine
#talk <username> - lets you talk to the logged in users
# w - combination of uptime and who commands 

# mysqldump
mysqldump -u root -p -all-databases > /home/server/Desktop/backupfile.sql

# mkpasswd
mkpasswd -l 10

# imagemagick
convert source.jpg -colorspace Gray destination.jpg # true grayscale only
convert source.jpg -monochrome destination.jpg      # true black and white
convert source.jpg -separate destination.jpg        # separate into gray channels

# Installing the same selection of packages several times
It can be useful to systematically install the same list of packages on several 
computers. This can be done quite easily.

First, retrieve the list of packages installed on the computer which will serve as the
"model" to copy.

$ dpkg --get-selections > pkg-list

The pkg-list file then contains the list of installed packages. Next, transfer the 
pkg-list file onto the computers you want to update and use the following commands:

## Update dpkg's database of known packages
# avail='mktemp'
# apt-cache dumpavail > "$avail"
# dpkg --merge-avail "$avail"
# rm -f "$avail"
## Update dpkg's selections
# dpkg --set-selections < pkg-list
## Ask apt-get to install the selected packages
# apt-get dselect-upgrade

The first commands records the list of available packages in the dpkg database, then 
dpkg --set-selections restores the selection of packages that you wish to install, and
the apt-get invocation executes the required operations! aptitude does not have this 
command. [Sources: pg. 108 The Debian Administrator's Handbook]
 
# deborphan
deborphan -sz
sudo apt remove --purge $(deborphan)

$ count the number of sub-directories
find ./* -type d | wc -l 
Note: Remember to use ./* if you don't want to include the current directory itself
in the total

Note: Always read offical installation guide for Debian/Ubuntu

# find
find ~ -name bu -type d     # search for 'bu' directories in ~
find . -name my_file.txt    # search for my_file.txt in .
find ~ -name '*.txt'        # search for '*.txt' in ~
find . -iname '*.jpg'       # find files by case-insensitive extension (ex: .jpg, .JPG)
find . -type d              # to find directories
find . -type f              # to find files
find . -type f -perm 777    # to find files by octal permission

# wn - command line interface to WordNet lexical database
wn perusing -over # to find definition of word perusing

# Text
less -M # for file name, the current and total lines

iostat

# history 
history -c # to clear shell history
ctrl P / ctrl N # backward and forward of commands in history in the shell prompt

# wn - command line interface to WordNet lexical database 
wn <word> -over  # read wn man page

# nmap
ifconfig
ipcalc 192.168.42.136
nmap -F 192.168.42.8/24
sudo arp-scan -l

# checking package integrity
The md5sum command is used to compute a 128-bit fingerprint that is strongly dependant
upon the contents of the file to which it is applied. It can be used to compare against
a previously-generated sum to determine whether the file has changed. It is commonly
used to ensure the integrity of updated packages distributed by a vendor:
sudo md5sum <package-name>

Adobe LR - ahtooL6i

# ufw
sudo ufw app list  # available applications
sudo ufw allow OpenSSH  # to allow SSH connections
sudo ufw enable  # enable the firewall
sudo ufw status  # status of the firewall
sudo ufw status verbose

Block an IP Address
To block all network connections that originate from a specific IP address, 15.15.15.51
$ sudo ufw deny from 15.15.15.51
[source IP address - 15.15.15.51, subnet IP address - 15.15.15.0/24]
Note: the source IP address can be specified in any firewall rule

Block connections to a Network interface
To block connections from a specific IP address, eg. 15.15.15.51, to a specific network
interface, eg. eth0, use this command.
$ sudo ufw deny in on eth0 from 15.15.15.51
This is the same as the previous example, with the addition of in on eth0. The netwoek
interface can be specified in any firewall rule and is a great way to limit the rule to 
a particular network.

Reference: https://www.digitalocean.com/community/tutorials/ufw-essentials-common-
	   firewall-rules-and-commands
	   https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-
           with-ufw-on-ubuntu-16-04 


# apt-file
apt-file is a command line tool for searching packages in Debian/Ubuntu repositories
sudo apt install apt-file   # to install apt-file
sudo apt-file update        # to update apt-file database
apt-file search <package_name>  # to query the database for <package_name>
apt-file search path/to/<package_name>
apt-file list <package_name>    # to list the content of an uninstalled package
sudo apt-file purge         # to delete the cache files


# user
sudo useradd -m mark  # add user Mark [-m tells Linux to create a home directory]
sudo passwd mark      # to create password for Mark
sudo userdel mark     # to remove a user by name mark
sudo usermod -e 2017-12-31 mark  # set date on which the account will expire
sudo usermod -l henry mark # to change Mark's login name to Henry
sudo usermod -L mark  # to temporarily lock Mark out of his account
sudo usermod -G sudo mark # using -U will unlock and -G will add/remove membership group
sudo chage -m 5 -M 30 mark # to force users to change password (no < 5 but no > 30 days)
sudo chage -W 7 mark  # to send Mark a warning seven days before his deadline
sudo chage --list mark  # to list Mark's current settings
Note: Referance Practical_LPIC-1.pdf (page:102)
	
# vagrant

# cfdisk

# Basic text analysis with command line tools in Linux
Book from Internet Archive for text analysis.
Jane Andrews, The Stories Mother Nature Told Her Children (1888, 1894)
(Project Gutenberg collection)
wget http://archive.org/download/thestoriesmother05792gut/stmtn10.txt
file stmtn10.txt
stmtn10.txt: C source, ASCII text, with CRLF line terminators

Note: The output of the file command confirms that this is an ASCII text, guesses that
it is some code in the C programming language (which is incorrect) and tells us that the
ends of the lines in the file are coded with both a carriage return and a line feed.
This is standard for window computers. Linux expect the ends of lines in an ASCII text 
file to be coded only with a line feed. If we want to move text files between operating
systems, this is one thing we have to pay attention to.

The head and tail commands show us the first few and last few lines of the file.
head stmtn10.txt
tail stmtn10.txt
 
Before modifying files, it is usually a good idea to make a copy of the original. We can
do this with the cp command.
cp stmtn10.txt stmtn10-backup.txt
less -N stmtn10.txt # option -N to include line numbers at the beginning of each line

# command to delete all of the material between lines 2206 and 2525
sed '2206,2525d' stmtn10.txt > stmtn10-nofooter.txt # sed - Linux stream editor
sed '1,40d' stmtn10-nofooter.txt > stmtn10-trimmed.txt

wc -l stmtn10-trimmed.txt # number of lines
wc -m stmtn10-trimmed.txt # number of characters

grep # pattern-matching command
# command below shows lines which contain the word giant, this pattern is case sensitive
grep -n "giant" stmtn10-trimmed.txt # option -n to include line numbers
grep -E -n "(G|g)iant" stmtn10-trimmed.txt

# When we are analyzing the words in a text, it is usually convenient to create a 
standardized version that eliminates whitespace and punctuation and converts all 
characters to lowercase. We use the tr command to translate and delete characters of our
trimmed text, to create a standardized version. Note that in this case the tr command
requires that we use the redirection operators to specify both the input file (<) and 
the output file (>).
tr -d [:punct:] < stmtn10-trimmed.txt > stmtn10-nopunct.txt # delete all punctuation 
tr [:upper:] [:lower:] < stmtn10-nopunct.txt > stmtn10-lowercase.txt # upper to lower

# Counting word frequencies
tr ' ' '\n' < stmtn10-lowercaself.txt > stmtn10-oneword.txt # translate ' ' to '\n'
# to sort that file so the words are in alphabetical order, and so that if a given word
appears a number of times, these are listed one after another.
sort stmtn10-newword.txt > stmtn10-onewordsort.txt
# uniq command with the -c option to count the number of repetitions of each line
uniq -c stmtn10-onewordsort.txt > stmtn10-wordfreq.txt
# all commands in one line
tr ' ' '\n' < stmtn10-lowercaself.txt | sort | uniq -c > stmtn10-wordfreq2.txt
# search for a particular term with the forward slash (/giant, for example)
Ref: https://williamjturkel.net/2013/06/15/basic-text-analysis-with-command-line-tools-
in-linux/

# Virtual Machine
virtinst - Program to create and clone virtual machines
virt-install
virt-manager

# pdftotext
pdftotext -layout report.pdf report.txt

# calcurse
calcurse -t   # List all todo items
calcurse -a   # Print the appointments and events for the current day and exit
calcurse -r7  # Print appointments and events for the next seven days

# Reviewing what you did today
# To list all the files in your home directory tree, excluding direcotries, that were
  accessed today: $ find ` -daystart -atime -1 \! -type d
# To list all the files in your home directory tree, excluding directories, that were
  modified today: $ find ~ -daystart -mtime -1 \! -type d
# To list all the files in your home directory tree, excluding diretories, that were
  accessed between now and two days ago: $ find ~ -daystart -atime -2 \! -type d
# To list all the files in your home directory tree, excluding directories, that were
  modified exactly two days ago: $ find ~ -daystart -mtime 2 \! -type d
# To find out what you did on September 11, 2001, type:
  $ touch -d "Sep 11 2001" /tmp/911
  $ touch -d "Sep 12 2001" /tmp/912
  $ find ~ -daystart -newer /tmp/911 \! -daystart -newer /tmp/912

# expand and unexpand
expand -t 10 filename        # convert every tab to ten spaces
unexpand -t 3 filename       # convert every three spaces to tabs

# format text
fmt -w 60 filename           # start a new line after 60 characters
fmt -t filename              # indent all but the first line of a paragraph

# docker
Method 1: Managing services in linux with systemd
systemctl list-unit-files --type service -all  # list all services
sudo systemctl | grep running  # list running services
systemctl start docker.service # start a service
systemctl start docker.socket
systemctl stop docker.service  # stop a service
systemctl stop docker.socket
systemctl restart docker.service # restart a service
systemctl restart docker.socket
systemctl status docker.service  # check the status of a service
systemctl status docker.socket
Method 2: Managing services in linux with init
service --status-all # list all services ([-] are disabled and [+] are enabled)
service <service-name> start # start a service
service <service-name> stop  # stop a service
service <service-name> restart # restart a service
service <service-name> status  # check the status of a service 
